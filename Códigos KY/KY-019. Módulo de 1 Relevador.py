import time
import network
from machine import Pin
from umqtt.simple import MQTTClient

# Configuraci√≥n del rel√© y la conexi√≥n MQTT
RELAY_PIN = 14  # Pin GPIO al que est√° conectado el rel√© KY-019
MQTT_BROKER = "192.168.137.202"  # Direcci√≥n del broker MQTT
MQTT_TOPIC = "prgs/rele"  # T√≥pico de MQTT para controlar el rel√©
MQTT_CLIENT_ID = "rele_control_{}".format(int(time.time()))  # ID del cliente MQTT
WIFI_SSID = "LOREDO LAP"  # Tu SSID Wi-Fi
WIFI_PASSWORD = "u55/5B85"  # Tu contrase√±a Wi-Fi

# Configuraci√≥n del pin para controlar el rel√©
relay = Pin(RELAY_PIN, Pin.OUT)  # Establece el pin como salida

def connect_wifi():
    wlan = network.WLAN(network.STA_IF)
    wlan.active(True)
    wlan.connect(WIFI_SSID, WIFI_PASSWORD)
    for _ in range(10):
        if wlan.isconnected():
            print("‚úÖ Wi-Fi conectado:", wlan.ifconfig())
            return True
        time.sleep(1)
    print("‚ùå No se pudo conectar a Wi-Fi")
    return False

def connect_mqtt():
    try:
        client = MQTTClient(MQTT_CLIENT_ID, MQTT_BROKER)
        client.connect()
        print("‚úÖ Conectado a MQTT")
        return client
    except Exception as e:
        print("‚ùå Error MQTT:", e)
        return None

def control_relay(command):
    """ Funci√≥n para controlar el estado del rel√© con 1 o 0 """
    if command == 1:
        relay.on()  # Enciende el rel√© (conectar dispositivo)
        print("‚úÖ Rel√© encendido")
    elif command == 0:
        relay.off()  # Apaga el rel√© (desconectar dispositivo)
        print("‚úÖ Rel√© apagado")

def handle_mqtt_message(topic, msg):
    """ Funci√≥n para manejar los mensajes recibidos de MQTT """
    print(f"üì• Mensaje recibido en {topic}: {msg.decode()}")
    try:
        command = int(msg.decode())  # Convertir el mensaje recibido a n√∫mero entero
        if command == 1:
            control_relay(1)  # Enciende el rel√©
        elif command == 0:
            control_relay(0)  # Apaga el rel√©
        else:
            print("‚ùå Comando no v√°lido. Solo se aceptan 1 o 0.")
    except ValueError:
        print("‚ùå Error: El mensaje recibido no es un n√∫mero v√°lido.")

if connect_wifi():
    client = connect_mqtt()
    if client:
        client.set_callback(handle_mqtt_message)  # Establecer la funci√≥n de callback para manejar mensajes
        client.subscribe(MQTT_TOPIC)  # Suscribirse al t√≥pico de MQTT
        while True:
            try:
                client.check_msg()  # Comprobar si hay nuevos mensajes en el t√≥pico
                time.sleep(1)
            except Exception as e:
                print("‚ùå Error en loop MQTT:", e)
                break
else:
    print("‚ùå No se pudo conectar a Wi-Fi.")
